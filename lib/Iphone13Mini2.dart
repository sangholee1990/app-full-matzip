import 'package:flutter/material.dart';

void main() {
  runApp(const FigmaToCodeApp());
}

// Generated by: https://www.figma.com/community/plugin/842128343887142055/
class FigmaToCodeApp extends StatelessWidget {
  const FigmaToCodeApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: const Color.fromARGB(255, 18, 32, 47),
      ),
      home: Scaffold(
        body: ListView(children: [ // The ListView here suggests the entire page might be scrollable
          Iphone13Mini2(),
        ]),
      ),
    );
  }
}

class Iphone13Mini2 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Note: The 'spacing' property on Column widgets in the original code was invalid
    // and has been removed. Spacing should be handled by SizedBoxes or Padding.
    return Column(
      children: [
        Container(
          width: 375,
          height: 1490, // Very tall, implies a scrollable page design
          clipBehavior: Clip.antiAlias,
          decoration: BoxDecoration(color: Colors.white), // Base color, mostly covered
          child: Stack(
            children: [
              Positioned(
                left: 0,
                top: 0,
                child: Container(
                  width: 375,
                  height: 1490,
                  decoration: BoxDecoration(color: const Color(0xFFF7F8FA)), // Page background
                ),
              ),

              // Header Elements
              Positioned(
                left: 20,
                top: 55, // Adjusted top for logo
                child: Container(
                  width: 92,
                  height: 27,
                  // TODO: Replace placeholder with actual MATZIP logo asset
                  child: Center(child: Text("[MATZIP Logo]", style: TextStyle(color: Colors.blueGrey, fontSize: 12))),
                  // decoration: BoxDecoration(
                  //   image: DecorationImage(
                  //     image: NetworkImage("https://placehold.co/92x27"), // Placeholder
                  //     fit: BoxFit.fill,
                  //   ),
                  // ),
                ),
              ),
              Positioned(
                right: 50,
                top: 55, // Aligned with logo
                child: Icon(Icons.notifications_none, color: const Color(0xFF161D24), size: 24), // Notification Icon
              ),
              Positioned(
                right: 20,
                top: 55, // Aligned with logo
                child: Icon(Icons.person_outline, color: const Color(0xFF161D24), size: 24), // Profile Icon
              ),

              Positioned(
                left: 0, // Status bar area, typically handled by OS
                top: 0,
                child: Container(
                  width: 375, // Should match screen width
                  height: 44,  // Typical status bar height
                  clipBehavior: Clip.antiAlias,
                  decoration: BoxDecoration(), // No explicit styling in image for this container
                  // child: Stack( // Content of status bar (time, icons) is usually system-rendered
                  //   children: [
                  //     Positioned(
                  //       left: 21,
                  //       top: 12,
                  //       child: Container( // This seems like an unrelated Figma artifact
                  //         width: 54,
                  //         height: 21,
                  //         decoration: ShapeDecoration(
                  //           shape: RoundedRectangleBorder(
                  //             borderRadius: BorderRadius.circular(32),
                  //           ),
                  //         ),
                  //         child: Stack(),
                  //       ),
                  //     ),
                  //   ],
                  // ),
                ),
              ),
              Positioned(
                left: 20,
                top: 117,
                child: SizedBox(
                  width: 335,
                  height: 23,
                  child: Text(
                    'AI 매물 추천 미리보기',
                    style: TextStyle(
                      color: const Color(0xFF161D24),
                      fontSize: 20,
                      fontFamily: 'Pretendard Variable',
                      fontWeight: FontWeight.w700,
                      letterSpacing: -0.50,
                    ),
                  ),
                ),
              ),

              // Recommendation Cards
              // TODO: If horizontal scrolling is needed, implement using ListView.builder(scrollDirection: Axis.horizontal)
              Positioned(
                left: 20,
                top: 160,
                child: Container(
                  width: 165, // Adjusted width to allow spacing if needed
                  height: 190,
                  padding: const EdgeInsets.all(15),
                  decoration: ShapeDecoration(
                    gradient: LinearGradient(
                      begin: Alignment(-0.00, -0.00),
                      end: Alignment(1.00, 1.03),
                      colors: [const Color(0xFF0B4438), const Color(0xFF1BAA8B)],
                    ),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.start,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        '교육을 중시하는',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 13,
                          fontFamily: 'Pretendard',
                          fontWeight: FontWeight.w400,
                        ),
                      ),
                      SizedBox(height: 10),
                      Text(
                        '3040 부부에게 \n맞는 집',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 18,
                          fontFamily: 'Pretendard',
                          fontWeight: FontWeight.w600,
                          height: 1.28,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              Positioned(
                left: 195, // Adjusted for spacing
                top: 160,
                child: Container(
                  width: 165, // Adjusted width
                  height: 190,
                  padding: const EdgeInsets.all(15),
                  decoration: ShapeDecoration(
                    color: const Color(0xFF14B997),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.start,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        '교통과 편의성을 중시하는',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 13,
                          fontFamily: 'Pretendard',
                          fontWeight: FontWeight.w400,
                        ),
                      ),
                      SizedBox(height: 10),
                      Text(
                        '2030 학생과 \n직장인에게 맞는 집',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 18,
                          fontFamily: 'Pretendard',
                          fontWeight: FontWeight.w600,
                          height: 1.28,
                        ),
                      ),
                    ],
                  ),
                ),
              ),

              // Subscribe Button
              Positioned(
                left: 20,
                top: 370,
                child: Container(
                  width: 335,
                  height: 40,
                  decoration: ShapeDecoration(
                    color: Colors.white,
                    shape: RoundedRectangleBorder(
                      side: BorderSide(
                        width: 1,
                        color: const Color(0x7F199C80),
                      ),
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: Center(
                    child: Text(
                      '구독하고 나에게 꼭 맞는 매물 추천 보기',
                      textAlign: TextAlign.center,
                      style: TextStyle(
                        color: const Color(0xFF0C493C),
                        fontSize: 16,
                        fontFamily: 'Pretendard Variable',
                        fontWeight: FontWeight.w600,
                        letterSpacing: -0.04,
                      ),
                    ),
                  ),
                ),
              ),

              // "조회수 TOP 10 아파트" Section
              Positioned(
                left: 20,
                top: 430,
                child: Container( // Main container for this dark section
                  width: 335,
                  // height: 480, // Height will be dynamic with content or defined by children
                  padding: const EdgeInsets.all(20),
                  decoration: ShapeDecoration(
                    color: const Color(0xFF161D24),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      // Search Bar
                      Container(
                        width: double.infinity, // Takes full width of parent padding
                        height: 35,
                        decoration: ShapeDecoration(
                          color: Colors.white,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10),
                          ),
                        ),
                        child: Row(
                          children: [
                            Padding(
                              padding: const EdgeInsets.symmetric(horizontal: 8.0),
                              child: Icon(Icons.search, color: const Color(0xFF878787), size: 20),
                            ),
                            Expanded(
                              child: Text(
                                '아파트명을 입력하세요.',
                                style: TextStyle(
                                  color: const Color(0xFF878787),
                                  fontSize: 14,
                                  fontFamily: 'Pretendard Variable',
                                  fontWeight: FontWeight.w600,
                                  letterSpacing: -0.04,
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                      SizedBox(height: 20),
                      // Title and Date
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text.rich(
                            TextSpan(
                              children: [
                                TextSpan(
                                  text: '조회수\n',
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 18,
                                    fontFamily: 'Pretendard Variable',
                                    fontWeight: FontWeight.w600,
                                    letterSpacing: -0.04,
                                  ),
                                ),
                                TextSpan(
                                  text: 'TOP 10 아파트',
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 18,
                                    fontFamily: 'Pretendard Variable',
                                    fontWeight: FontWeight.w600,
                                    height: 1.39,
                                    letterSpacing: -0.04,
                                  ),
                                ),
                              ],
                            ),
                          ),
                          Text(
                            '데이터 산출일 : 2025-05-18',
                            style: TextStyle(
                              color: Colors.white,
                              fontSize: 12,
                              fontFamily: 'Pretendard Variable',
                              fontWeight: FontWeight.w400,
                              letterSpacing: -0.03,
                            ),
                          ),
                        ],
                      ),
                      SizedBox(height: 20),
                      // Filter Buttons
                      // TODO: Implement with actual Button widgets for interactivity
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          _buildFilterButton("전국", true),
                          _buildFilterButton("서울", false),
                          _buildFilterButton("경기", false),
                          _buildFilterButton("인천", false),
                          _buildFilterButton("부산", false),
                        ],
                      ),
                      SizedBox(height: 20),
                      // List Items for Apartments
                      // TODO: Refactor to use ListView.builder and a reusable list item widget
                      _buildApartmentListItem("1", "삼청청담공원아파트(도산대로 96길)", "거래가 증가 + 100", isNew: false, hasUpArrow: true),
                      _buildApartmentListItem("2", "삼청청담공원아파트(도산대로 96길)", "거래가 증가 + 100", isNew: true),
                      _buildApartmentListItem("3", "삼청청담공원아파트(도산대로 96길)", "거래가 증가 + 100", isNew: true),
                      _buildApartmentListItem("4", "삼청청담공원아파트(도산대로 96길)", "거래가 증가 + 100", isNew: true),
                      _buildApartmentListItem("5", "삼청청담공원아파트(도산대로 96길)", "거래가 증가 + 100", isNew: true),
                      SizedBox(height: 15),
                      Center(
                        child: Opacity(
                          opacity: 0.50,
                          child: Text(
                            '더보기',
                            textAlign: TextAlign.center,
                            style: TextStyle(
                              color: Colors.white,
                              fontSize: 14,
                              fontFamily: 'Pretendard Variable',
                              fontWeight: FontWeight.w400,
                              letterSpacing: -0.04,
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),

              // "조회수 TOP 10 지역" Section (Reflecting image_50d811.png)
              Positioned(
                left: 20,
                top: 930, // Position from original Figma code
                child: Container(
                  width: 335,
                  // height: 440, // Original fixed height, content might determine actual needed height
                  padding: const EdgeInsets.fromLTRB(20, 20, 20, 15), // Adjusted padding
                  decoration: ShapeDecoration(
                    color: const Color(0xFF161D24), // Dark background for the whole section
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      // Header for this section
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text.rich(
                            TextSpan(
                              children: [
                                TextSpan(
                                  text: '조회수\n',
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 18, // Matches other section titles
                                    fontFamily: 'Pretendard Variable',
                                    fontWeight: FontWeight.w600,
                                  ),
                                ),
                                TextSpan(
                                  text: 'TOP 10 지역',
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 18,
                                    fontFamily: 'Pretendard Variable',
                                    fontWeight: FontWeight.w600,
                                    height: 1.39,
                                  ),
                                ),
                              ],
                            ),
                          ),
                          Text(
                            '데이터 산출일 : 2025-05-18', // Consistent with other sections
                            style: TextStyle(
                              color: Colors.white.withOpacity(0.7),
                              fontSize: 12,
                              fontFamily: 'Pretendard Variable',
                              fontWeight: FontWeight.w400,
                            ),
                          ),
                        ],
                      ),
                      SizedBox(height: 15),

                      // Dropdowns and Search Button Row
                      Row(
                        crossAxisAlignment: CrossAxisAlignment.start, // Align dropdowns to the top
                        children: [
                          // Left Dropdown (시/도)
                          _buildStaticDropdownList(
                            items: [
                              _buildDropdownItem('서울특별시', false, false, context),
                              _buildDropdownItem('경기도', true, false, context, hasArrow: true), // '경기도' has an arrow
                            ],
                            width: 100, // Approximate width
                          ),
                          SizedBox(width: 10),

                          // Right Dropdown (시/구)
                          _buildStaticDropdownList(
                            items: [
                              _buildDropdownItem('고양시', false, false, context),
                              _buildDropdownItem('과천시', true, true, context, hasArrow: true),
                              // _buildDropdownItem('광명시', false, false, context),
                              // _buildDropdownItem('김포시', false, false, context),
                              // _buildDropdownItem('남양주시', false, false, context),
                              // _buildDropdownItem('동두천시', false, false, context),
                              // _buildDropdownItem('성남시', false, false, context),
                              // _buildDropdownItem('수원시', false, false, context),
                              Padding(
                                padding: const EdgeInsets.only(top: 8.0, left: 10, bottom: 5),
                                child: Text(
                                  '더보기',
                                  style: TextStyle(
                                    color: Colors.white.withOpacity(0.5),
                                    fontSize: 10,
                                    fontFamily: 'Pretendard Variable',
                                  ),
                                ),
                              ),
                            ],
                            width: 100, // Approximate width
                          ),
                          Spacer(), // Pushes search button to the right

                          // Search Button
                          Container(
                            width: 55,
                            height: 35,
                            decoration: ShapeDecoration(
                              color: const Color(0xFF14B997), // Teal color
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(10),
                              ),
                            ),
                            child: Center(
                              child: Text(
                                '검색',
                                style: TextStyle(
                                  color: Colors.white,
                                  fontSize: 14,
                                  fontFamily: 'Pretendard Variable',
                                  fontWeight: FontWeight.w600,
                                ),
                              ),
                            ),
                          ),
                        ],
                      ),
                      SizedBox(height: 20),

                      // Placeholder for the actual TOP 10 Region List
                      // (The image shows this list blurred behind the dropdowns)
                      // For now, just a placeholder text. In a real app, this would be a ListView.
                      _buildRegionListItem("1", "삼성청담공원 (지역 예시)", "조회수 증가 +100", hasUpArrow: true),
                      _buildRegionListItem("2", "삼성청담공원 (지역 예시)", "조회수 증가 +80", isNew: true),
                      SizedBox(height: 10),


                      // "더보기" for the main list
                      Center(
                        child: Opacity(
                          opacity: 0.50,
                          child: Text(
                            '더보기',
                            textAlign: TextAlign.center,
                            style: TextStyle(
                              color: Colors.white,
                              fontSize: 14,
                              fontFamily: 'Pretendard Variable',
                              fontWeight: FontWeight.w400,
                              letterSpacing: -0.04,
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),

              // Bottom Navigation Bar
              Positioned(
                left: 0,
                // top: 1400, // This will be at the bottom of the 1490 screen.
                // For a real app, this would be `bottomNavigationBar` of Scaffold.
                bottom: 0,
                child: Container(
                  width: 375,
                  height: 90, // Standard height might be less, e.g., 56 + padding
                  padding: EdgeInsets.only(bottom: MediaQuery.of(context).padding.bottom > 0 ? 20 : 0), // Handle safe area for home indicator
                  decoration: BoxDecoration(
                    color: Colors.white,
                    boxShadow: [
                      BoxShadow(
                        color: Color(0x26000000),
                        blurRadius: 5,
                        offset: Offset(0, -5),
                        spreadRadius: -3,
                      )
                    ],
                  ),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      _buildBottomNavItem(Icons.home_filled, '홈', true), // Assuming Home is selected
                      _buildBottomNavItem(Icons.apartment, '아파트', false),
                      _buildBottomNavItem(Icons.location_on, '로컬', false),
                      _buildBottomNavItem(Icons.bar_chart, 'AI추천', false),
                      _buildBottomNavItem(Icons.menu, '서비스', false),
                    ],
                  ),
                ),
              ),
              // Home indicator - usually handled by MediaQuery padding if bottom nav bar is placed correctly.
              // This explicit positioning might not be needed with proper scaffold structure.
              // Positioned(
              //   left: 123,
              //   top: 1470, // Very specific, hard to maintain
              //   child: Container(
              //     width: 130,
              //     height: 5,
              //     decoration: ShapeDecoration(
              //       color: const Color(0xFF878787),
              //       shape: RoundedRectangleBorder(
              //         borderRadius: BorderRadius.circular(10),
              //       ),
              //     ),
              //   ),
              // ),
            ],
          ),
        ),
      ],
    );
  }

  // Helper widget for filter buttons in the dark section
  Widget _buildFilterButton(String text, bool isSelected) {
    return Container(
      padding: EdgeInsets.symmetric(horizontal: 12, vertical: 6),
      decoration: ShapeDecoration(
        color: isSelected ? const Color(0xFF14B997) : Colors.white,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(10),
        ),
      ),
      child: Text(
        text,
        textAlign: TextAlign.center,
        style: TextStyle(
          color: isSelected ? Colors.white : const Color(0xFF878787),
          fontSize: 12,
          fontFamily: 'Pretendard Variable',
          fontWeight: FontWeight.w600,
          letterSpacing: -0.03,
        ),
      ),
    );
  }

  // Helper widget for apartment list items
  Widget _buildApartmentListItem(String rank, String name, String details, {bool isNew = false, bool hasUpArrow = false}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: Row(
        children: [
          SizedBox(
              width: 25, // For rank and icon
              child: Row(
                children: [
                  if(hasUpArrow) Icon(Icons.arrow_upward, color: const Color(0xFF14B997), size: 14) else Text(rank, style: TextStyle(color: Colors.white, fontSize: 14)),
                ],
              )
          ),
          SizedBox(width: 5),
          if (isNew) ...[
            Text(
              'NEW',
              style: TextStyle(color: const Color(0xFF14B997), fontSize: 10, fontWeight: FontWeight.w400),
            ),
            SizedBox(width: 8),
          ],
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  name,
                  style: TextStyle(color: Colors.white, fontSize: 14, fontWeight: FontWeight.w400),
                  overflow: TextOverflow.ellipsis,
                ),
                SizedBox(height: 2),
                Text(
                  details,
                  style: TextStyle(color: const Color(0xFF14B997), fontSize: 10, fontWeight: FontWeight.w400),
                ),
              ],
            ),
          ),
          Icon(Icons.arrow_forward_ios, color: Colors.white54, size: 16),
        ],
      ),
    );
  }

  // Helper widget for bottom navigation items
  Widget _buildBottomNavItem(IconData icon, String label, bool isSelected) {
    final color = isSelected ? const Color(0xFF14B997) : const Color(0xFF878787);
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      mainAxisSize: MainAxisSize.min,
      children: [
        Icon(icon, color: color, size: 24),
        SizedBox(height: 4),
        Text(
          label,
          style: TextStyle(
            color: color,
            fontSize: 11,
            fontFamily: 'Pretendard Variable',
            fontWeight: FontWeight.w400,
            letterSpacing: -0.03,
          ),
        ),
      ],
    );
  }
}


Widget _buildStaticDropdownList({required List<Widget> items, required double width}) {
  return Container(
    width: width,
    padding: const EdgeInsets.symmetric(vertical: 5),
    decoration: ShapeDecoration(
      color: const Color(0xFF374957), // Dark grey background for dropdown
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(10),
      ),
      // TODO: Add shadow if present in design for popped-up elements
    ),
    child: Column(
      mainAxisSize: MainAxisSize.min, // Important for Column height
      crossAxisAlignment: CrossAxisAlignment.start,
      children: items,
    ),
  );
}

Widget _buildDropdownItem(String text, bool isSelected, bool isHighlighted, BuildContext context, {bool hasArrow = false}) {
  return Container(
    width: double.infinity, // Take full width of parent dropdown container
    padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 8),
    color: isHighlighted ? const Color(0xFF677A89) : Colors.transparent, // Highlight color for selected item
    child: Row(
      children: [
        if (hasArrow) Icon(Icons.play_arrow, size: 12, color: Colors.white.withOpacity(0.8)),
        if (hasArrow) SizedBox(width: 5),
        Expanded(
          child: Text(
            text,
            style: TextStyle(
              color: Colors.white,
              fontSize: 12,
              fontFamily: 'Pretendard Variable',
              // fontWeight: isSelected ? FontWeight.w600 : FontWeight.w400, // Example of different weight
            ),
          ),
        ),
      ],
    ),
  );
}

// Placeholder for region list item (similar to _buildApartmentListItem)
Widget _buildRegionListItem(String rank, String name, String details, {bool isNew = false, bool hasUpArrow = false}) {
  // This can be similar to _buildApartmentListItem, just adapt for region data
  return Padding(
    padding: const EdgeInsets.symmetric(vertical: 8.0),
    child: Row(
      children: [
        SizedBox(
            width: 25,
            child: Row(
              children: [
                if(hasUpArrow) Icon(Icons.arrow_upward, color: const Color(0xFF14B997), size: 14) else Text(rank, style: TextStyle(color: Colors.white, fontSize: 14)),
              ],
            )
        ),
        SizedBox(width: 5),
        if (isNew) ...[
          Text(
            'NEW',
            style: TextStyle(color: const Color(0xFF14B997), fontSize: 10, fontWeight: FontWeight.w400),
          ),
          SizedBox(width: 8),
        ],
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                name,
                style: TextStyle(color: Colors.white, fontSize: 14, fontWeight: FontWeight.w400),
                overflow: TextOverflow.ellipsis,
              ),
              SizedBox(height: 2),
              Text(
                details,
                style: TextStyle(color: const Color(0xFF14B997), fontSize: 10, fontWeight: FontWeight.w400),
              ),
            ],
          ),
        ),
        Icon(Icons.arrow_forward_ios, color: Colors.white54, size: 16),
      ],
    ),
  );
}